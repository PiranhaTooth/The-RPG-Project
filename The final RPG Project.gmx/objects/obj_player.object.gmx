<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//set variables
vx = 0;
vy = 0;
player_speed = 3;
timer = 0;
state = "IDLE";
gender = global.save_player_gender;

if gender = "Male"
{
    sprite_index = spr_player_idle_up_m
}

if gender = "Female"
{
    sprite_index = spr_player_idle_up_f
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// player movement m

//establish movement variables
up = keyboard_check(ord("W"));
left = keyboard_check(ord("A"));
down = keyboard_check(ord("S"));
right = keyboard_check(ord("D"));
//attack = mouse_check_button_pressed(mb_left);
//player_switch = keyboard_check_pressed(vk_enter);


//state machine for movement
if gender = "Male"
{
    switch (state)
    {
        case "IDLE":
        {
            image_speed = 0;
            
            vx = 0;
            vy = 0;
            
            script_execute(scr_check_input);
            
            break;
        }
        case "UP":
        {
            image_speed = 0.075;
            sprite_index = spr_player_up_m;
            
            vx = 0;
            vy = -1 * player_speed;
            
            script_execute(scr_check_input);
    
            break;
        }
        case "DOWN":
        {
            image_speed = 0.075;
            sprite_index = spr_player_down_m;
            
            vx = 0;
            vy = player_speed;
            
            script_execute(scr_check_input);
            
            break;
        }
        case "LEFT":
        {
            image_speed = 0.075;
            sprite_index = spr_player_left_m;
            
            vx = -1 * player_speed;
            vy = 0;
            
            script_execute(scr_check_input);
    
            break;
        }
        case "RIGHT":
        {
            image_speed = 0.075;
            sprite_index = spr_player_right_m;
            
            vx = player_speed;
            vy = 0;
            
            script_execute(scr_check_input);
    
            break;
        }
    }
}

x += vx;
y += vy;


//room border clamp
x = clamp(x, 0, room_width);
y = clamp(y, 0, room_height);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player movement f

//state machine for movement
if gender = "Female"
{
    switch (state)
    {
        case "IDLE":
        {
            image_speed = 0;
            
            vx = 0;
            vy = 0;
            
            script_execute(scr_check_input);
            
            break;
        }
        case "UP":
        {
            image_speed = 0.075;
            sprite_index = spr_player_up_f;
            
            vx = 0;
            vy = -1 * player_speed;
            
            script_execute(scr_check_input);
    
            break;
        }
        case "DOWN":
        {
            image_speed = 0.075;
            sprite_index = spr_player_down_f;
            
            vx = 0;
            vy = player_speed;
            
            script_execute(scr_check_input);
            
            break;
        }
        case "LEFT":
        {
            image_speed = 0.075;
            sprite_index = spr_player_left_f;
            
            vx = -1 * player_speed;
            vy = 0;
            
            script_execute(scr_check_input);
    
            break;
        }
        case "RIGHT":
        {
            image_speed = 0.075;
            sprite_index = spr_player_right_f;
            
            vx = player_speed;
            vy = 0;
            
            script_execute(scr_check_input);
    
            break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_save_notifier);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
